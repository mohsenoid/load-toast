apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group = "com.mohsenoid.${name}"
version = "1.1.5"
description = "This small library provides a better toast which will give the user feedback by morphing into a checkmark or cross (success and fail)"

def siteUrl = "http://mohsenoid.com/${name}/"
def gitUrl = "https://github.com/mohsenoid/${name}.git"

android {
    compileSdkVersion 30
    resourcePrefix "loadtoast__"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 30

        versionCode 7
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        debug.java.srcDirs += "src/debug/kotlin"
        test.java.srcDirs += "src/test/kotlin"
        androidTest.java.srcDirs += "src/androidTest/kotlin"
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.nineoldandroids:library:2.4.0'
}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier.set('javadoc')
}

afterEvaluate {
    publishing {
        publications {
            aar(MavenPublication) {
                groupId = project.group
                artifactId = project.name
                version = project.version

                from components.findByName("release")

                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = project.name
                    packaging = 'aar'
                    description = project.description
                    url = siteUrl

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'mohsenoid'
                            name = 'Mohsen Mirhoseini'
                            email = 'contact@mohsenoid.com'
                        }
                    }
                    scm {
                        connection = gitUrl
                        developerConnection = gitUrl
                        url = siteUrl
                    }
                }
            }
        }

        repositories {
            maven {
                // change URLs to point to your repos, e.g. http://my.org/repo
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                authentication {
                    basic(BasicAuthentication) {
                        credentials {
                            username = "$System.env.MOHSENOID_OSSRH_USERNAME"
                            password = "$System.env.MOHSENOID_OSSRH_PASSWORD"
                        }
                    }
                }
            }
        }
    }

    setProperty("signing.keyId", "$System.env.MOHSENOID_SIGNING_KEY_ID")
    setProperty("signing.password", "$System.env.MOHSENOID_SIGNING_PASSWORD")

    signing {
        sign publishing.publications.aar
    }
}
